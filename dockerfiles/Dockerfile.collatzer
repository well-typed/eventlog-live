# syntax=docker/dockerfile:1.7-labs

# To build this image, run:
# docker build --tag well-typed/eventlog-live-example-collatzer:0.1.0.0 --file ./dockerfiles/Dockerfile.collatzer .

# Use the Haskell image with GHC 9.10
# See: https://hub.docker.com/_/haskell
FROM haskell:9.10-slim-bullseye AS build

# Configure collatzer
ARG GHC_EVENTLOG_SOCKET="/tmp/ghc_eventlog.sock"
ENV GHC_EVENTLOG_SOCKET=${GHC_EVENTLOG_SOCKET}

# Copy required packages to container
WORKDIR "/eventlog-live"
COPY --parents \
  "./eventlog-live/assets/eventlog-live-otelcol.png" \
  "./eventlog-live/eventlog-live.cabal" \
  "./eventlog-live/LICENSE" \
  "./eventlog-live/src/GHC/Eventlog/Live.hs" \
  "./eventlog-live/src-lens/GHC/Eventlog/Live/Lens.hs" \
  "./eventlog-live/src-machines/GHC/Eventlog/Live/Machines.hs" \
  "./eventlog-live/src-options/GHC/Eventlog/Live/Options.hs" \
  "./examples/collatzer/app/Main.hs" \
  "./examples/collatzer/collatzer.cabal" \
  "./examples/collatzer/LICENSE" \
  "./examples/collatzer/src-counters-ekg/GHC/Eventlog/Counters/EKG.hs" \
  "./examples/collatzer/src-counters/GHC/Eventlog/Counters.hs" \
  "/eventlog-live/"

# Create cabal.project file
COPY <<EOF /eventlog-live/cabal.project
packages: eventlog-live
packages: examples/collatzer
EOF

# Build collatzer
RUN <<EOF
cabal update
mkdir "/eventlog-live/bin"
cabal install \
    --overwrite-policy=always \
    --install-method=copy \
    --installdir="/eventlog-live/bin" \
    collatzer
EOF

# Copy collatzer to output stage
FROM debian:bullseye-slim AS output
COPY --from=build "/eventlog-live/bin/collatzer" "/bin/collatzer"

# Run command
CMD sleep 5 && collatzer --unix ${GHC_EVENTLOG_SOCKET}
