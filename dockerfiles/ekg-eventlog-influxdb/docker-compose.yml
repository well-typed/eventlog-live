services:
  oddball:
    image: "wenkokke/oddball:0.1.0.0"
    build:
      context: "../.."
      dockerfile: "./dockerfiles/Dockerfile.oddball"
    volumes:
      - "ghc_eventlog_socket:/run/ghc-eventlog-socket"
    environment:
      GHC_EVENTLOG_SOCKET: "/run/ghc-eventlog-socket/ghc-eventlog.sock"
    command: "44"

  ekg-eventlog-influxdb:
    image: "wenkokke/ekg-eventlog-influxdb:0.1.0.0"
    build:
      context: "../.."
      dockerfile: "./dockerfiles/Dockerfile.ekg-eventlog-influxdb"
    depends_on:
      oddball:
        condition: "service_started"
      influxdb:
        condition: "service_started"
    volumes:
      - "ghc_eventlog_socket:/run/ghc-eventlog-socket"
    environment:
      GHC_EVENTLOG_SOCKET: "/run/ghc-eventlog-socket/ghc-eventlog.sock"
      GHC_EVENTLOG_INFLUXDB_HOST: "influxdb"
      GHC_EVENTLOG_INFLUXDB_DB: "eventlog"
      GHC_EVENTLOG_INFLUXDB_USERNAME: "admin"
      GHC_EVENTLOG_INFLUXDB_PASSWORD: "admin"

  influxdb:
    image: "influxdb:1.8"
    restart: "always"
    ports:
    - "8086:8086"
    healthcheck:
      test: "curl -f http://localhost:8086/ping"
      interval: 1m
      timeout: 10s
      retries: 5
    environment:
      INFLUXDB_HTTP_AUTH_ENABLED: "true"
      INFLUXDB_DB: "eventlog"
      INFLUXDB_ADMIN_USER: "admin"
      INFLUXDB_ADMIN_PASSWORD: "admin"

  grafana:
    # Necessary to get around `database` datasource provisioning bug
    # See: https://github.com/grafana/grafana/issues/64795
    image: "grafana/grafana-oss-dev:9.5.0-107958pre"
    restart: "always"
    ports:
    - "3000:3000"
    healthcheck:
      test: "curl -f http://localhost:3000/api/health"
      interval: 1m
      timeout: 10s
      retries: 5
    volumes:
      - "./config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml"
      - "./config/grafana-dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml"
      - "./config/grafana-dashboards-default.json:/var/lib/grafana/dashboards/default.json"

volumes:
  ghc_eventlog_socket:
